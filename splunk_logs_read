package com.example.splunkservice;

package com.example.splunkservice;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

@Service
public class SplunkService {

    @Value("${splunk.url}")
    private String splunkUrl;

    @Value("${splunk.token}")
    private String splunkToken;

    public String checkConnectivity() {
        // Example search query
        String searchQuery = "index=_internal | head 10";

        // Construct the initial curl command
        String initialCurlCommand = String.format(
                "curl -k -H \"Authorization: Bearer %s\" %s/services/search/jobs -d search=\"%s\" -d earliest_time=\"-15m\" -d latest_time=\"now\"",
                splunkToken, splunkUrl, searchQuery
        );

        ProcessBuilder initialProcessBuilder = new ProcessBuilder("bash", "-c", initialCurlCommand);
        String sid = null;

        try {
            Process initialProcess = initialProcessBuilder.start();
            BufferedReader initialReader = new BufferedReader(new InputStreamReader(initialProcess.getInputStream()));
            StringBuilder initialOutput = new StringBuilder();
            String line;
            while ((line = initialReader.readLine()) != null) {
                initialOutput.append(line).append("\n");
            }
            int exitCode = initialProcess.waitFor();
            if (exitCode == 0) {
                // Parse the sid from the response (you might need to adjust the parsing based on the actual response format)
                String response = initialOutput.toString();
                sid = response.substring(response.indexOf("<sid>") + 5, response.indexOf("</sid>"));
            } else {
                return "Initial Search Failed. Exit Code: " + exitCode;
            }
        } catch (IOException | InterruptedException e) {
            Thread.currentThread().interrupt();
            return "Error during initial search: " + e.getMessage();
        }

        if (sid == null) {
            return "No SID found in the initial search response.";
        }

        // Construct the results curl command with output_mode=json
        String resultsCurlCommand = String.format(
                "curl -k -H \"Authorization: Bearer %s\" %s/services/search/jobs/%s/results?output_mode=json",
                splunkToken, splunkUrl, sid
        );

        ProcessBuilder resultsProcessBuilder = new ProcessBuilder("bash", "-c", resultsCurlCommand);

        try {
            Process resultsProcess = resultsProcessBuilder.start();
            BufferedReader resultsReader = new BufferedReader(new InputStreamReader(resultsProcess.getInputStream()));
            StringBuilder resultsOutput = new StringBuilder();
            while ((line = resultsReader.readLine()) != null) {
                resultsOutput.append(line).append("\n");
            }
            int exitCode = resultsProcess.waitFor();
            if (exitCode == 0) {
                return "Search Results:\n" + resultsOutput.toString();
            } else {
                return "Fetching Results Failed. Exit Code: " + exitCode;
            }
        } catch (IOException | InterruptedException e) {
            Thread.currentThread().interrupt();
            return "Error during fetching results: " + e.getMessage();
        }
    }
}

====================

package com.example.splunkcontroller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.example.splunkservice.SplunkService;

@RestController
public class SplunkController {

    private final SplunkService splunkService;

    public SplunkController(SplunkService splunkService) {
        this.splunkService = splunkService;
    }

    @GetMapping("/search")
    public String searchLogs(@RequestParam String index, @RequestParam String query) {
        return splunkService.searchLogs(index, query);
    }
}
=====

http://localhost:8080/search?index=your-index-name&query=your-splunk-query
